{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api\";\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const getActivities = async () => {\n  try {\n    const response = await api.get(\"/activities\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des activités:\", error);\n    throw error;\n  }\n};\nexport const addActivity = async activity => {\n  try {\n    const response = await api.post(\"/activities\", activity);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors de l'ajout de l'activité:\", error);\n    throw error;\n  }\n};\nexport const getLeaderboard = async () => {\n  try {\n    const response = await api.get(\"/leaderboard\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération du classement:\", error);\n    throw error;\n  }\n};\nexport const getChallenges = async () => {\n  try {\n    const response = await api.get(\"/challenges\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des défis:\", error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","getActivities","response","get","data","error","console","addActivity","activity","post","getLeaderboard","getChallenges"],"sources":["D:/Documents 2025/UM5 2024/Déploimentt des app Web et Mob/Projet 1/FitBuddy/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:5000/api\";\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport const getActivities = async () => {\n  try {\n    const response = await api.get(\"/activities\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des activités:\", error);\n    throw error;\n  }\n};\n\nexport const addActivity = async (activity) => {\n  try {\n    const response = await api.post(\"/activities\", activity);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors de l'ajout de l'activité:\", error);\n    throw error;\n  }\n};\n\nexport const getLeaderboard = async () => {\n  try {\n    const response = await api.get(\"/leaderboard\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération du classement:\", error);\n    throw error;\n  }\n};\n\nexport const getChallenges = async () => {\n  try {\n    const response = await api.get(\"/challenges\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des défis:\", error);\n    throw error;\n  }\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACrE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAOC,QAAQ,IAAK;EAC7C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACY,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;IACxD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACrE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACjE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}